name: Filter

# This workflow is triggered on pull requests
on:
  workflow_run:
    workflows: ["PR Trigger"]
    types:
      - completed

# Permissions for the GITHUB_TOKEN used by the workflow.
permissions:
  id-token: write # Needed for OIDC-related operations.
  contents: read # Allows reading the content of the repository.
  pull-requests: read # Allows reading pull request metadata.
  actions: read # Allows reading artifacts from other workflow runs
  statuses: write # Allows writing action statuses

# Default settings for all run commands in the workflow jobs.
defaults:
  run:
    shell: bash -e -o pipefail {0} # Ensures that scripts fail on error and pipefail is set.

# Abort prior jobs in the same workflow / PR
concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-info:
    runs-on: ubuntu-latest
    steps:
      - name: Download PR info artifact
        uses: actions/download-artifact@v4
        with:
          name: pr_info
          run-id: ${{ github.event.workflow_run.id }} # Pulls artifact from the PR workflow run
          github-token: ${{ github.token }}
      - name: Read PR info
        id: read-info
        run: |
          echo "PR_NUMBER=$(cat pr_number.txt)" >> $GITHUB_OUTPUT
          echo "PR_SHA=$(cat pr_sha.txt)" >> $GITHUB_OUTPUT
    outputs:
      prNumber: ${{ steps.read-info.outputs.PR_NUMBER }}
      prSHA: ${{ steps.read-info.outputs.PR_SHA }}

  lint-check:
    needs: pr-info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ needs.pr-info.outputs.prSHA }}
      - name: Mark Check as Started
        uses: ./.github/actions/status-checks
        with:
          ghToken: "${{ github.token }}"
          status: "pending"
          url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          name: "lint-check"
          repo: "${{ github.repository }}"
          sha: "${{ needs.pr-info.outputs.prSHA }}"
      - name: Use Node.js latest
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 20
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install UDS CLI
        shell: bash
        # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
        run: brew install defenseunicorns/tap/uds@0.11.2
      - name: Run Formatting Checks
        run: uds run lint-check --no-progress
      - name: Mark Check Result
        if: always()
        uses: ./.github/actions/status-checks
        with:
          ghToken: ${{ github.token }}
          status: ${{ job.status == 'success' && 'success' || job.status == 'failure' && 'failure' || 'error' }}
          url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          name: "lint-check"
          repo: ${{ github.repository }}
          sha: ${{ needs.pr-info.outputs.prSHA }}

  # This job checks if there are changes in specific paths source packages.
  check-paths:
    needs:
      - lint-check
      - pr-info
    runs-on: ubuntu-latest
    name: Select Jobs
    outputs:
      packages: ${{ steps.path-filter.outputs.changes }}

    steps:
      # Todo: update pipeline status
      - name: Checkout the code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      # Uses a custom action to filter paths for source packages.
      - name: Check src paths
        id: path-filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        with:
          filters: .github/filters.yaml
          ref: ${{ needs.pr-info.outputs.prSHA }}

  # This job triggers a separate workflow for each changed source package, if any.
  run-package-test:
    needs:
      - check-paths
      - pr-info
    name: Schedule
    strategy:
      matrix:
        package: ${{ fromJSON(needs.check-paths.outputs.packages) }}
        flavor: [upstream, registry1]
        test_type: [install]
        include:
          - package: all
            flavor: registry1
            test_type: upgrade
          - package: all
            flavor: upstream
            test_type: upgrade
    uses: ./.github/workflows/test.yaml
    with:
      package: ${{ matrix.package }}
      flavor: ${{ matrix.flavor }}
      test_type: ${{ matrix.test_type }}
      sha: ${{ needs.pr-info.outputs.prSHA }}
    secrets: inherit # Inherits all secrets from the parent workflow.
