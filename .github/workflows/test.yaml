name: Test packages

on:
  # Triggered by pull-request-conditionals.yaml
  workflow_call:
    inputs:
      package:
        type: string
        description: "The name of the source package to test"
        required: true
      flavor:
        type: string
        description: "Flavor of the source package to test"
        required: true
      test_type:
        type: string
        description: "The type of test to perform"
        required: true
      sha:
        type: string
        description: "The SHA to checkout and test with"
        required: true

permissions:
  contents: read
  statuses: write # Allows writing action statuses

jobs:
  test:
    runs-on: "${{ inputs.package == 'all' && 'uds-ubuntu-big-boy-8-core' || 'ubuntu-latest'}}"
    timeout-minutes: 30
    name: Test
    env:
      UDS_PKG: ${{ inputs.package }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.sha }}
      - name: Mark Check as Started
        uses: ./.github/actions/status-checks
        with:
          status: "pending"
          sha: ${{ inputs.sha }}
          name: "Schedule (${{inputs.package}}, ${{inputs.flavor}}, ${{inputs.test_type}}) / Test"

      - name: Environment setup
        uses: ./.github/actions/setup
        with:
          registry1Username: ${{ secrets.IRON_BANK_ROBOT_USERNAME }}
          registry1Password: ${{ secrets.IRON_BANK_ROBOT_PASSWORD }}
          ghToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Test a single source package
        if: ${{ inputs.package != 'all' && inputs.test_type == 'install' }}
        run: uds run test-single-package --set FLAVOR=${{ inputs.flavor }} --no-progress

      - name: Test UDS Core Install
        if: ${{ inputs.package == 'all' && inputs.test_type == 'install' }}
        run: uds run test-uds-core --set FLAVOR=${{ inputs.flavor }} --no-progress

      - name: Test UDS Core Upgrade
        if: ${{ inputs.package == 'all' && inputs.test_type == 'upgrade' }}
        run: uds run test-uds-core-upgrade --set FLAVOR=${{ inputs.flavor }} --no-progress

      - name: Debug Output
        if: ${{ always() }}
        uses: ./.github/actions/debug-output

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: -${{ inputs.test_type }}-${{ inputs.package }}-${{ inputs.flavor }}

      - name: Mark Check Result
        if: always()
        uses: ./.github/actions/status-checks
        with:
          status: ${{ job.status == 'success' && 'success' || job.status == 'failure' && 'failure' || 'error' }}
          sha: ${{ inputs.sha }}
          name: "Schedule (${{inputs.package}}, ${{inputs.flavor}}, ${{inputs.test_type}}) / Test"
